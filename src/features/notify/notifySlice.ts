import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'
import { displayNotify } from './notifySend'

interface NotifyState {
  loading: boolean
  error: boolean
  show: boolean
  hide: boolean
}

const initialState = {
  loading: false,
  error: false,
  show: false,
  hide: true,
}

export const notifyMsg = createAsyncThunk(
  'notify/showMsg',
  async (msg: string) => {
    displayNotify(msg)
  },
)

export const notifySlice = createSlice({
  name: 'notify',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    showMsg: () => {},

    // Use the PayloadAction type to declare the contents of `action.payload`
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {},
})

export const { showMsg } = notifySlice.actions

export const selectPost = (state: NotifyState) => state

export default notifySlice.reducer
